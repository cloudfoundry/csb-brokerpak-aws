# Copyright 2020 Pivotal Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: csb-aws-redis
id: e9c11b1b-0caa-45c9-b9b2-592939c9a5a6
description: Beta - CSB Amazon ElastiCache for Redis - multinode with automatic failover
display_name: CSB Amazon ElastiCache for Redis (Beta)
image_url: file://service-images/csb.png
documentation_url: https://docs.vmware.com/en/Tanzu-Cloud-Service-Broker-for-AWS/1.2/csb-aws/GUID-reference-aws-redis.html
provider_display_name: VMware
support_url: https://aws.amazon.com/redis/
tags: [aws, redis, beta]
plan_updateable: true
provision:
  plan_inputs:
  - field_name: cache_size
    type: integer
    details: Deprecated. Use `node_type` instead - Cache size in GB.
  user_inputs:
  - field_name: redis_version
    required: true
    type: string
    details: |
      The version for the redis instance.
      For more information about upgrading engine versions, see
      https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/VersionManagement.html.
      The downgrade of the version is not allowed as it involves the recreation of the instance.
  - field_name: instance_name
    type: string
    details: Name for your instance
    default: csb${request.instance_id}
    constraints:
      maxLength: 40
      minLength: 6
      pattern: ^[a-z][a-z0-9-]+$
    prohibit_update: true
  - field_name: region
    type: string
    details: The region of AWS.
    default: us-west-2
    constraints:
      examples:
      - us-central1
      - asia-northeast1
      pattern: ^[a-z][a-z0-9-]+$
    prohibit_update: true
  - field_name: node_count
    type: integer
    details: Number of nodes (primary and replicas) in cluster
    default: 2
  - field_name: aws_access_key_id
    type: string
    details: AWS access key
    default: ${config("aws.access_key_id")}
  - field_name: aws_secret_access_key
    type: string
    details: AWS secret key
    default: ${config("aws.secret_access_key")}
  - field_name: aws_vpc_id
    details: VPC ID for instance
    type: string
    default: ""
  - field_name: node_type
    type: string
    details: AWS Elasticache node type (see https://aws.amazon.com/elasticache/pricing)
    default: ""
    # `node_type` is required by the provider but we can't specify it as such
    # in this manifest because we need to support passing `cache_size` without
    # any `node_type` for backward compatibility. If `node_type` isn't specified
    # in the plan nor at rovisioning time, provisioning will throw this error:
    # "node_type" is required unless "global_replication_group_id"
  - field_name: elasticache_subnet_group
    type: string
    details: AWS Elasticache subnet group already in existence to use
    default: ""
  - field_name: elasticache_vpc_security_group_ids
    type: string
    details: Comma delimited list of security group ID's for instance
    default: ""
  - field_name: at_rest_encryption_enabled
    type: boolean
    details: Whether to enable encryption at rest.
    default: true
    prohibit_update: true
  - field_name: kms_key_id
    type: string
    details: The ARN of the key to use if encrypting at rest. Defaults to AWS managed key.
    default: ""
    prohibit_update: true
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
    type: object
  template_refs:
    outputs: terraform/redis/cluster/provision/outputs.tf
    provider: terraform/redis/cluster/provision/provider.tf
    versions: terraform/redis/cluster/provision/versions.tf
    variables: terraform/redis/cluster/provision/variables.tf
    main: terraform/redis/cluster/provision/main.tf
    data: terraform/redis/cluster/provision/data.tf
  outputs:
  - field_name: name
    type: string
    details: The name of the redis.
  - field_name: host
    type: string
    details: Hostname or IP address of the exposed redis endpoint used by clients to connect to the service.
  - field_name: tls_port
    type: integer
    details: The TLS port number of the exposed redis instance.
  - field_name: password
    type: string
    details: The password to authenticate to the redis instance.
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs: []
  template: ''
  outputs: []
examples:
- name: example
  description: Create an example-plan Redis instance
  plan_id: c7f64994-a1d9-4e1f-9491-9d8e56bbf146
  provision_params: {}
  bind_params: {}
- name: with-custom-region
  description: Create a Redis instance with a custom region
  plan_id: c7f64994-a1d9-4e1f-9491-9d8e56bbf146
  provision_params: {"region": "us-east-1"}
  bind_params: {}
- name: with-custom-node_type
  description: Create a Redis instance with a custom node_type
  plan_id: 2deb6c13-7ea1-4bad-a519-0ac9600e9a29
  provision_params: {"node_type": "cache.t2.micro"}
  bind_params: {}
